/**
ЗАДАНИЕ:
  Учительница дала Антону большое домашнее задание по геометрии, но он как обычно его не сделал, поскольку участвовал в регулярном раунде Codeforces. В
  задание был дан набору из n прямых, определяемых уравнениями y = ki * x + bi. Требовалось определить, существует ли хотя бы одна точка пересечения двух
  прямых, лежащая строго внутри полосы ограниченной x1 < x2. Другими словами, правда ли что найдутся такие 1 <= i < j <= n и такие x', y', что:
    y' = ki * x' + bi, то есть точка (x', y') принадлежит прямой с номером i;
    y' = kj * x' + bj, то есть точка (x', y') принадлежит прямой с номером j;
    x1 < x' < x2, то есть точка (x', y') лежит внутри полосы ограниченной x1 < x2.
  Вы же не оставите Антона в беде и поможете ему решить задание?

ВВОД:
  В первой строке входных данных находится целое число n (2 <= n <= 10^5) - количество прямых в задании. Во второй строке содержатся целые числа x1, x2
  (-1000000 <= x1 < x2 <= 1000000) определяющие полосу, внутри которой требуется найти точку пересечения прямых.
  В следующих n строках содержатся целые числа ki, bi (-1000000 <= ki, bi <= 1000000) - описание прямых. Гарантируется, что все прямые различны, то есть
  для любых двух i != j верно, что либо ki != kj, либо bi != bj.

ВЫВОД:
  Выведите "Yes" (без кавычек), если существует хотя бы одно пересечение двух прямых, расположенное строго внутри полосы, иначе выведите "No" (без кавычек).
*/

#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

typedef long long s64;

const int N = 100000;

pair<s64, s64> arr[N];
s64 n, x1, x2, k, b;
bool flag;

int main()
{
    cin >> n >> x1 >> x2;
    for (int i = 0; i < n; ++i)
    {
        cin >> k >> b;
        arr[i] = make_pair(k*x1 + b, k*x2 + b);
    }
    sort(arr, arr + n);
    for (int i = 0; i < n-1; ++i)
        if (flag = arr[i].second > arr[i+1].second)
            break;

    cout << (flag ? "YES" : "NO");
    return 0;
}
