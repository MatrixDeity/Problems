/**
ЗАДАНИЕ:
  Задана строка s. Будем называть словом любую наибольшую по включению последовательность подряд идущих символов, не включающую в себя символы ','
  (запятая) и ';' (точка с запятой). Например, в строке "aba,123;1a;0" четыре слова: "aba", "123", "1a", "0". Слово может оказаться пустым: например,
  строка s = ";;" содержит три пустых слова, которые разделены символом ';'.
  Вам требуется найти в заданной строке все слова, являющиеся ЦЕЛЫМИ неотрицательными числами без лидирующих нулей, и по ним построить новую строку a.
  Строка a должна содержать слова, являющиеся числами, разделенные символом ',' (порядок чисел должен остаться таким же каким был в строке s). По оставшимся
  словам нужно построить строку b аналогичным образом (порядок слов должен остаться таким же как в строке s).
  В этой задаче "101", "0" - это ЦЕЛЫЕ числа, а "01" и "1.0" - нет.
  Например, для строки "aba,123;1a;0" нужно построить строку a = "123,0" и строку равную b = "aba,1a".

ВВОД:
  В единственной строке входных данных находится строка s (1 <= |s| <= 10^5). Строка состоит только из символов '.' (ASCII 46), ',' (ASCII 44), ';'
  (ASCII 59), цифр, строчных и прописных букв латинского алфавита.

ВЫВОД:
  В первой строке выведите строку a, окруженную кавычками (ASCII 34), а во второй - строку b, окруженную кавычками.
  Если среди слов в строке s нет чисел, в первой строке выведите знак минус (ASCII 45). Если все слова в строке s являются числами, во второй строке
  выведите знак минус.
*/

#include <iostream>

using namespace std;

string str, temp, a, b;
int len;
bool isInt(true);

int main()
{
    cin >> str;

    str.push_back(';');
    len = (int)str.size();
    for (int i = 0; i < len; ++i)
    {
        if (str[i] == ';' || str[i] == ',')
        {
            if (isInt && !temp.empty())
                a += temp + ',';
            else
                b += temp + ',';
            temp.clear();
            isInt = true;
        }
        else
        {
            if (str[i] < '1' || str[i] > '9')
                isInt &= str[i] == '0' && (!temp.empty() || str[i + 1] == ',' || str[i + 1] == ';');
            temp.push_back(str[i]);
        }
    }

    if (!a.empty())
    {
        a.erase(a.end() - 1);
        cout << '\"' << a << '\"' << endl;
    }
    else
        cout << '-' << endl;
    if (!b.empty())
    {
        b.erase(b.end() - 1);
        cout << '\"' << b << '\"' << endl;
    }
    else
        cout << '-' << endl;
    return 0;
}
