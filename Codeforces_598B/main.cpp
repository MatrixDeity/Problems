/**
ЗАДАНИЕ:
  Вам даны строка s и m запросов. Каждый запрос задаётся парой индексов li, ri и целым числом ki, и означает, что подстроку s[li... ri]
  нужно ki раз циклически сдвинуть вправо. Запросы нужно обрабатывать последовательно, друг за другом.
  Циклический сдвиг вправо обозначает перемещение последнего символа на место первого и сдвиг всех остальных символов направо на одну
  позицию.
  Например, если исходная строка s равна abacaba, то в случае запроса l1 = 3, r1 = 6, k1 = 1 получится строка abbacaa, если же после этого
  обработать запрос l2 = 1, r2 = 4, k2 = 2, то в результате получится строка baabcaa.

ВВОД:
  В первой строке находится строка s (1 <= |s| <= 10^4) - исходная строка, состоящая из строчных букв английского алфавита. Запись |s|
  обозначает длину строки s.
  Во второй строке находится число m (1 <= m <= 300) - количество запросов циклического сдвига.
  В i-й из следующих m строк находится тройка чисел li, ri и ki (1 <= li <= ri <= |s|, 1 <= ki <= 10^6) - параметры i-го запроса.

ВЫВОД:
  Выведите строку, которая получится после обработки всех m запросов.
*/

#include <iostream>

using namespace std;

string str, sub;
int m, l, r, k, len;

int main()
{
    cin >> str >> m;
    for (int i = 0; i < m; ++i)
    {
        cin >> l >> r >> k;
        --l;
        --r;
        len = r - l + 1;
        sub.resize(len);
        for (int j = l; j <= r; ++j)
            sub[(j + k - l) % len] = str[j];
        str.replace(l, len, sub);
    }

    cout << str;
    return 0;
}
