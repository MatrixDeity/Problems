/**
ЗАДАНИЕ:
  Есть соревнование по программированию под названием SnakeUp, в котором хотят принять участие 2n человек. Принять участие в контесте можно только в составе
  команды из ровно двух людей. Известна сила каждой возможной команды из двух людей. Все значения сил различны.
  Каждый соревнующийся надеется, что он может найти напарника, с которым он образует как можно более сильную команду. Таким образом, соревнующийся стремится
  создать команду с наибольшей возможной силой, путем выбора сокомандника из тех, кто согласен быть с ним в команде. Более формально, два человека, A и B
  смогут создать команду, если каждый из них является наилучшим возможным напарником (среди соревнующихся, не нашедших к текущему моменту пару) друг для
  друга.
  Определить, кто с кем будет участвовать в команде?

ВВОД:
  Ввод состоит из 2n строк.
  В первой строке записано целое число n (1 <= n <= 400) - количество команд, которые надо образовать.
  В i-й строке (i > 1) записано i-1 чисел ai1, ai2, ..., ai(i-1). Здесь aij (1 <= aij <= 10^6, все aij различны) обозначает силу команды, состоящей из
  человека i и человека j (люди пронумерованы, начиная с 1).

ВЫВОД:
  Выведите строку, содержащую 2n чисел. Из них i-е число должно обозначать номер напарника i-го человека.
*/

#include <iostream>
#include <map>
#include <vector>

using namespace std;

int n, a;
map<int, pair<int, int> > power;
vector<bool> members;
vector<int> ans;

int main()
{
    cin >> n;
    n *= 2;
    ans.resize(n);
    members.resize(n);
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < i; ++j)
        {
            cin >> a;
            power[a].first = i;
            power[a].second = j;
        }

    for (auto itr = power.rbegin(); itr != power.rend(); ++itr)
    {
        int i(itr->second.first), j(itr->second.second);
        if (!members[i] && !members[j])
        {
            members[i] = members[j] = true;
            ans[i] = j;
            ans[j] = i;
        }
    }

    for (int x : ans)
        cout << x + 1 << ' ';
    return 0;
}
