/**
ЗАДАНИЕ:
  Для защиты информации в системах передачи данных через Интернет, специалистами фирмы СКБ Контур был разработан уникальный криптографический алгоритм.
  Главное преимущество этого алгоритма заключается в том, что в качестве ключей не требуется использовать очень большие числа; можно вполне обойтись и
  натуральными числами, не превосходящими миллиона. Однако, для повышения стойкости криптосистемы, рекомендуется использовать специальные числа — те самые,
  которые человеку психологически кажутся наименее "привычными", "правильными", "естественными". Чтобы математически определить и выделить такие числа,
  вводится понятие тривиальности натурального числа.
  Тривиальностью натурального числа N будем называть отношение суммы всех его собственных делителей к самому числу. Так, например, тривиальность числа 10
  равна 0.8=(1+2+5)/10, а тривиальность числа 20 равна 1.1=(1+2+4+5+10)/20. Напомним, что собственным делителем натурального числа называют любой делитель,
  строго меньший, чем это число.
  Итак, в системе криптографической защиты информации фирмы СКБ Контур рекомендуется использовать как можно менее тривиальные числа. Вы должны составить
  программу, которая будет находить наименее тривиальное число в заданном диапазоне.

ВВОД:
  В единственной строке записаны целые числа I и J, 1 <= I <= J <= 10^6, разделённые пробелом.

ВЫВОД:
  Выведите целое число N, удовлетворяющее следующим двум свойствам:
    1. I <= N <= J;
    2. из всех целых чисел, удовлетворяющих свойству 1, N имеет наименьшую тривиальность.
*/

#include "iostream"
#include "cmath"

using namespace std;

int main()
{
  unsigned long long i, j, k, n(0), d, sum;
  double triv(1e+999);
  cin >> i >> j;
  if(i == 1)
  {
    cout << 1;
    return 0;
  }
  for(k = j; k >= i; k--)
  {
    sum = 1;
    for(d = 2; d <= ceil(sqrt(k)); d++)
      if(!(k%d))
      {
        sum += d + k/d;
        if(d == k/d) sum -= d;
      }
    if(sum == 1)
    {
      n = k;
      break;
    }
    if(triv > double(sum)/k)
      {
        n = k;
        triv = double(sum)/k;
      }
  }
  cout << n;
  return 0;
}
