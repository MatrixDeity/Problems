/**
ЗАДАНИЕ:
  Чтобы потренироваться красиво прыгать в воду, Вилбур решил построить бассейн прямоугольной формы у себя на заднем дворе. Он ввёл координатные оси и так
  выбрал прямоугольник, чтобы его стороны были параллельны этим осям. Конечно, площадь этого прямоугольника была положительна. Все четыре вершины
  запланированного бассейна были записаны у Вилбура на бумажке, пока не пришёл его вредный друг и не стёр некоторые вершины.
  Теперь Вилбуру интересно, можно ли по сохранившимся точкам однозначно восстановить площадь исходного прямоугольника.

ВВОД:
  В первой строке входных данных записано число n (1 <= n <= 4) - количество вершин, которые вредный друг Вилбура не стал стирать.
  В каждой из следующих n строк записаны два целых числа xi и yi (-1000 <= xi, yi <= 1000), задающие координаты i-й из оставшихся вершин. Вершины даны в
  произвольном порядке.
  Гарантируется, что точки яляются вершинами какого-то прямоугольника положительной площади, со сторонами параллельными осям координат.

ВЫВОД:
  Выведите площадь изначального прямоугольника, если её можно однозначно определить по имеющимся данным. В противном случае выведите -1.
*/

#include <iostream>
#include <cmath>

using namespace std;

int n, ans(-1);
int rect[4][2];

int main()
{
    cin >> n;
    for (int i = 0; i < n; ++i)
        cin >> rect[i][0] >> rect[i][1];
    if (n < 2)
    {
        cout << ans;
        return 0;
    }

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            if (rect[i][0] != rect[j][0] && rect[i][1] != rect[j][1])
            {
                ans = abs(rect[i][0] - rect[j][0]) * abs(rect[i][1] - rect[j][1]);
                break;
            }

    cout << ans;
    return 0;
}
