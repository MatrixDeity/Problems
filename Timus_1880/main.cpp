/**
ЗАДАЧА:
  Шёл очередной контест Петрозаводских сборов. Игроки команды Psych Up быстро нашли простую задачу, и Федя сел за компьютер. Через пять минут решение было
  готово. Не тратя времени на тестирование, Федя отправил его на проверку и через несколько секунд получил вердикт Time Limit Exceeded.
  Федя скомкал условие задачи и вышел из класса, хлопнув дверью. Что-то шло не так, нужно было развеяться. По пути в туалет он услышал разговор авторов
  контеста. Паша обсуждал со своим другом решение той самой задачи. Федя смог разобрать из их разговора только слова «собственные числа».
  Федя подумал и решил, что у него, конечно же, есть собственные числа. Например, дата рождения, номер квартиры, оценка на последнем экзамене, количество
  поездок на соревнования. Но ведь контест командный. А что такое собственные числа команды? Естественно, что число является собственным для команды, если оно
  собственное для каждого из её участников. С такими радостными мыслями Федя направился назад в аудиторию.

ВВОД:
  Входные данные состоят из трёх блоков по две строки. Первая строка каждого блока содержит целое число n — количество собственных чисел очередного игрока
  (1 <= n <= 4 000). Во второй строке блока записано n целых различных чисел в порядке возрастания — собственные числа очередного игрока. Все собственные
  числа — целые, положительные и не превосходят 10^9.

ВЫВОД:
  Выведите количество собственных чисел команды Psych Up.
 */

#include "iostream"

using namespace std;

bool findBinary(unsigned int a[], unsigned int x, int l, int r)
{
  while(r-l > 1)
  {
    int mid = (r+l)/2;
    if(a[mid] < x) l = mid;
    else r = mid;
  }
  return a[l] == x || a[r] == x;
}

int main()
{
  unsigned int i, res(0);

  cin >> i;
  unsigned int i1[i+1];
  i1[0] = i;
  for(i = 1; i <= i1[0]; i++)
    cin >> i1[i];

  cin >> i;
  unsigned int i2[i+1];
  i2[0] = i;
  for(i = 1; i <= i2[0]; i++)
    cin >> i2[i];

  cin >> i;
  unsigned int i3[i+1];
  i3[0] = i;
  for(i = 1; i <= i3[0]; i++)
    cin >> i3[i];

  for(i = 1; i <= i1[0]; i++)
    if(findBinary(i2, i1[i], 1, i2[0]) && findBinary(i3, i1[i], 1, i3[0])) res++;

  cout << res;
  return 0;
}
